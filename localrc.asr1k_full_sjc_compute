# -*- mode: shell-script -*-

# Setting OFFLINE to True switches off download of packages.
#OFFLINE=True
OFFLINE=False

# Setting RECLONE=yes will make stach.sh freshen each repo on each run.
RECLONE=no

DEBUG=True
VERBOSE=True

# Destination path for installation of the OpenStack components.
# There is no need to specify it unless you want the code in
# some particular location (like in a directory shared by all VMs).
DEST=/opt/stack

# Logging

# Running DevStack with multiple hosts requires a custom localrc file 
# for each host. The master is the same as a single host in installation
# with MULTI_HOST=True
#MULTI_HOST=False
MULTI_HOST=True

disable_service key
#disable_service keystone
#disable_service nova
disable_service g-api
disable_service g-reg
disable_service n-api
disable_service n-crt
disable_service n-obj
#disable_service n-cpu
disable_service n-net
disable_service tempest
disable_service n-cond
disable_service n-sch
disable_service mysql
#disable_service n-novnc
#disable_service n-xvnc
#disable_service n-cauth
#enable_service n-cauth

disable_service h-eng
disable_service h-api
disable_service h-api-cfn
disable_service h-api-cw
# Disable Cinder
disable_service cinder
disable_service c-sch
disable_service c-api
disable_service c-vol
disable_service horizon


#OS_IDENTITY_API_VERSION=2.0
# Set this to True if CSR1kv setup scripts for Nova and Glance should be executed
# If you won't use CSR1kv you can leave it as False.
Q_CISCO_CONFIGURE_NOVA_AND_GLANCE=False

enable_service neutron
#enable_service q-svc
enable_service q-agt
#enable_service q-dhcp
#enable_service q-l3
#enable_service ciscocfgagent
#enable_service q-ciscorouter
#enable_service q-ciscodevicemanager

#LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver
Q_PLUGIN=ml2
ENABLE_TENANT_VLANS=True
Q_ML2_TENANT_NETWORK_TYPE=vlan
ML2_VLAN_RANGES=pvnet1:2000:2050
OVS_PHYSICAL_BRIDGE=br-p4p2
#OVS_PHYSICAL_BRIDGE=br-p4p1
OVS_BRIDGE_MAPPINGS=pvnet1:$OVS_PHYSICAL_BRIDGE
PUBLIC_INTERFACE=p4p2
#PUBLIC_INTERFACE=p4p1
#ML2_VLAN_RANGES=100:200
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch
#Q_ML2_TENANT_NETWORK_TYPE=local
Q_USE_PROVIDER_NETWORKING=True
Q_L3_ENABLED=False

# Specify the L3 router plugin that the ML2 script configures to be
# the Cisco device manager service plugin. This ensure it is loaded
# before the Cisco routing service plugin
ML2_L3_PLUGIN=neutron.plugins.cisco.service_plugins.cisco_device_manager_plugin.CiscoDeviceManagerPlugin

# My single node DevStackVM has NATed access to the external world. 
# Its default GW is 172.16.6.2 (provided by VMware Fusion), the VM host 
# (my MBP) has IP address 172.16.6.1 (on vmnet8).
# The network where my DevStack machines reside. ALWAYS VERIFY IT BEFORE RUNNING stack.sh!
MY_NET='172.29.74.128/27'

# ``HOST_IP`` is not set by default.
# This is the IP address of my DevStackVM.
HOST_IP=172.29.74.139
SERVICE_HOST=172.29.74.138
SERVICE_HOST_NAME=GG26node7

# Some network address settings relevant for my configuration. 
#FLAT_INTERFACE=`~/bin/hostitfc -n -c $MY_NET`
# FIXED_RANGE=10.0.3.0/24
# NETWORK_GATEWAY=10.0.3.1
# FIXED_NETWORK_SIZE=256
# FLOATING_RANGE=172.29.74.224/28
# Q_FLOATING_ALLOCATION_POOL=start=172.29.74.229,end=172.29.74.238
# PUBLIC_NETWORK_GATEWAY=172.29.74.228
# 
# Q_CISCO_MGMT_SUBNET=10.30.119.0
# Q_CISCO_MGMT_SUBNET_LENGTH=24
# Q_CISCO_MGMT_SUBNET_USAGE_RANGE_START=10.30.119.70
# Q_CISCO_MGMT_SUBNET_USAGE_RANGE_END=10.30.119.80
# Use br-int as bridge to reach external networks
PUBLIC_BRIDGE=br-p4p2

# Default routertype for Neutron routers
Q_CISCO_DEFAULT_ROUTER_TYPE=ASR1k_router

NOVA_VNC_ENABLED=True
NOVNCPROXY_URL="http://$SERVICE_HOST:6080/vnc_auto.html"
VNCSERVER_LISTEN=0.0.0.0
VNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP

# If the host uses a i386 CPU, then the default X86_64 cirros image will not work"
IMAGE_URLS="http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-i386-disk.img"

LOG_COLOR=True
LOGDIR=$TOP_DIR/logs
SCREEN_LOGDIR=$DEST/logs
LOGFILE=$LOGDIR/stack.sh.log
our_pw=simple
# Must use hard coded value, as scripts grep for the following variables.
DATABASE_TYPE=mysql
RABBIT_HOST=$SERVICE_HOST
MYSQL_HOST=$SERVICE_HOST
GLANCE_HOSTPORT=$SERVICE_HOST:9292
DATABASE_PASSWORD=$our_pw
MYSQL_PASSWORD=$DATABASE_PASSWORD
MYSQL_USER=stacker
RABBIT_PASSWORD=$our_pw
SERVICE_TOKEN=$our_pw
SERVICE_PASSWORD=$our_pw
ADMIN_PASSWORD=$our_pw
#CINDER_SERVICE_HOST=$SERVICE_HOST

# Include all services that should be installed using git rather that pip in this variable
#LIBS_FROM_GIT=neutron,python-neutronclient,python-glanceclient,python-novaclient,python-openstackclient,python-keystoneclient
LIBS_FROM_GIT=neutron,python-neutronclient,python-novaclient,python-openstackclient

GIT_BASE=https://github.com

# Global Openstack requirements
#REQUIREMENTS_REPO=${GIT_BASE}/CiscoSystems/requirements.git
#REQUIREMENTS_BRANCH=csr1kv_for_routing_juno
REQUIREMENTS_REPO=${GIT_BASE}/openstack/requirements.git
REQUIREMENTS_BRANCH=stable/kilo

# Neutron service
NEUTRON_REPO=${GIT_BASE}/CiscoSystems/neutron.git
#NEUTRON_REPO=${GIT_BASE}/onecloud/neutron.git
#NEUTRON_BRANCH=bobmel/device_manager_plugin
#NEUTRON_BRANCH=bobmel/device_manager_plugin_kilo_stable
#NEUTRON_BRANCH=kilo_asr1k
NEUTRON_BRANCH=asr1k-stable-kilo
#NEUTRON_BRANCH=asr1k_kilo_multi_region
#NEUTRON_BRANCH=bobmel/device_manager_plugin_kilo_stable_tox

# Neutron client
#NEUTRONCLIENT_REPO=${GIT_BASE}/CiscoSystems/python-neutronclient.git
#NEUTRONCLIENT_BRANCH=bobmel/device_manager_plugin
#NEUTRONCLIENT_BRANCH=devmgr
NEUTRONCLIENT_BRANCH=stable/kilo

# Horizon
#HORIZON_REPO=${GIT_BASE}/CiscoSystems/horizon.git
#HORIZON_BRANCH=bobmel/device_manager_plugin

# unified auth system (manages accounts/tokens)
#KEYSTONE_REPO=${KEYSTONE_REPO:-${GIT_BASE}/openstack/keystone.git}
#KEYSTONE_BRANCH=${KEYSTONE_BRANCH:-master}
#KEYSTONE_BRANCH=stable/kilo
#GLANCE_BRANCH=stable/kilo
#HORIZON_BRANCH=stable/kilo
NOVA_BRANCH=stable/kilo
#GLANCECLIENT_BRANCH=stable/kilo
NOVACLIENT_BRANCH=stable/kilo
#KEYSTONECLIENT_BRANCH=stable/kilo
OPENSTACKCLIENT_BRANCH=stable/kilo
