# -*- mode: shell-script -*-

# Setting OFFLINE to True switches off download of packages.
OFFLINE=False

# Setting RECLONE=yes will make stach.sh freshen each repo on each run.
RECLONE=yes

GIT_BASE=${GIT_BASE:-https://github.com}
NEUTRON_REPO=${GIT_BASE}/CiscoSystems/neutron.git
NEUTRON_BRANCH=csr1kv_for_routing_juno
#NOVA_REPO=${GIT_BASE}/CiscoSystems/nova.git
#NOVA_BRANCH=csr1kv_for_routing_juno
# Cisco doesn't currently have a requirements fork so use bob's fork
REQUIREMENTS_REPO=${GIT_BASE}/bobmel/requirements.git
REQUIREMENTS_BRANCH=csr1kv_for_routing_juno

# Destination path for installation of the OpenStack components.
# There is no need to specify it unless you want the code in
# some particular location (like in a directory shared by all VMs).
#DEST=/opt/stack

# Running DevStack with multiple hosts requires a custom localrc file 
# for each host. The master is the same as a single host in installation
# with MULTI_HOST=True
MULTI_HOST=False

disable_service n-net
disable_service tempest

enable_service neutron
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service ciscocfgagent
enable_service q-ciscorouter
enable_service q-ciscodevicemanager

#LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver
Q_PLUGIN=csr1kv_openvswitch
#Q_PLUGIN=ml2
#ENABLE_TENANT_VLANS=True
#ML2_VLAN_RANGES=100:200
#Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch
#Q_ML2_TENANT_NETWORK_TYPE=local

Q_CISCO_ROUTER_PLUGIN=yes

# My single node DevStackVM has NATed access to the external world. 
# Its default GW is 172.16.6.2 (provided by VMware Fusion), the VM host 
# (my MBP) has IP address 172.16.6.1 (on vmnet8).
# The network where my DevStack machines reside. ALWAYS VERIFY IT BEFORE RUNNING stack.sh!
MY_NET='172.16.6.0/24'

# ``HOST_IP`` is not set by default.
# This is the IP address of my DevStackVM.
HOST_IP=`~/bin/hostitfc -i -c $MY_NET`

# Some network address settings relevant for my configuration. 
FLAT_INTERFACE=`~/bin/hostitfc -n -c $MY_NET`
FIXED_RANGE=10.0.3.0/24
NETWORK_GATEWAY=10.0.3.1
FIXED_NETWORK_SIZE=256
FLOATING_RANGE=172.16.6.32/27
PUBLIC_NETWORK_GATEWAY=172.16.6.33

# Use br-int as bridge to reach external networks
PUBLIC_BRIDGE=br-int

# Logging
# -------

# By default ``stack.sh`` output only goes to the terminal where it runs.  It can
# be configured to additionally log to a file by setting ``LOGFILE`` to the full
# path of the destination log file.  A timestamp will be appended to the given name.
LOGFILE=~/devstack/stack.sh.log

our_pw=simple
MYSQL_PASSWORD=$our_pw
MYSQL_USER=stacker
RABBIT_PASSWORD=$our_pw
SERVICE_TOKEN=$our_pw
SERVICE_PASSWORD=$our_pw
ADMIN_PASSWORD=$our_pw

# Type of virtualization to use. Options: kvm, lxc, qemu
LIBVIRT_TYPE=kvm
# Uncomment this to use LXC virtualization.
#LIBVIRT_TYPE=lxc

# List of images to use.
case "$LIBVIRT_TYPE" in
    lxc) # the cirros root disk in the uec tarball is empty, so it will not work for lxc
	IMAGE_URLS="http://cloud-images.ubuntu.com/releases/oneiric/release/ubuntu-11.10-server-cloudimg-amd64.tar.gz,http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-rootfs.img.gz";;
    *)  # otherwise, use the uec style image (with kernel, ramdisk, disk)
	IMAGE_URLS="http://cloud-images.ubuntu.com/releases/oneiric/release/ubuntu-11.10-server-cloudimg-amd64.tar.gz,http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-uec.tar.gz";;
esac

# Uncomment this to set the default instance type.  
#DEFAULT_INSTANCE_TYPE=m1.micro
